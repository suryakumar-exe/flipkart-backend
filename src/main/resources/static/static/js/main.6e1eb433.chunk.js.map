{"version":3,"sources":["Services/ProductService.js","Components/Displayproduct.js","Components/Home.js","Components/Orderproduct.js","Components/Updateproduct.js","App.js","reportWebVitals.js","index.js"],"names":["product","axios","post","get","id","delete","put","Displayproduct","props","state","no","ProductService","displayproduct","then","result","setState","data","deleteproduct","filter","pro","this","history","push","style","color","fontFamily","fontWeight","class","backgroundColor","map","pname","quantity","price","paymode","odate","ddate","cname","email","contact","address","onClick","deletepro","updatepro","to","Component","Home","Orderproduct","today","Date","date","getDate","getMonth","getFullYear","date1","changedata","bind","changedata1","validateData","event","name","target","value","preventDefault","Number","orderproduct","window","alert","align","onSubmit","type","pattern","title","onChange","required","disabled","for","className","rows","cols","Updateproduct","match","params","findById","updateproduct","on","placeholder","App","styles","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e1eb433.chunk.js","sourcesContent":["import axios from \"axios\"\r\nclass ProductService\r\n{\r\n    orderproduct(product)\r\n    {\r\n        return axios.post(\"http://localhost:2021/flipkart_curd/savepro\",product)\r\n    }\r\n    displayproduct()\r\n    {\r\n        return axios.get(\"http://localhost:2021/flipkart_curd/fetchpro\")\r\n    }\r\n    deleteproduct(id)\r\n    {\r\n        return axios.delete(\"http://localhost:2021/flipkart_curd/deletepro/\"+id)\r\n    }\r\n    findById(id)\r\n    {\r\n        return axios.get(\"http://localhost:2021/flipkart_curd/search/\"+id)\r\n    }\r\n    updateproduct(product)\r\n    {\r\n        return axios.put(\"http://localhost:2021/flipkart_curd/updatepro\",product)\r\n    }\r\n}\r\nexport default new ProductService()","import React,{Component} from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport ProductService from \"../Services/ProductService\"\r\nimport './textstyle.css'\r\nclass Displayproduct extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            product:[],\r\n            no:1\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        ProductService.displayproduct().then(result=>{\r\n            this.setState({\r\n                product:result.data\r\n            })\r\n        })\r\n    }\r\n    deletepro(id)\r\n    {\r\n       \r\n        ProductService.deleteproduct(id).then(result=>{\r\n            this.setState({\r\n                product:this.state.product.filter(pro=>pro.id!==id),\r\n                no:1\r\n            })\r\n        })\r\n    }\r\n    updatepro(id)\r\n    {\r\n        this.props.history.push(\"/update/\"+id)\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <h1 style={{ color:\"blue\",fontFamily:\"cursive\",fontWeight:\"bold\"}}>YOUR ORDER LIST</h1>\r\n                <hr/>\r\n                <table class=\"table table-striped\" style={{backgroundColor:\"lightblue\"}}>\r\n                <thead>\r\n                    <tr>\r\n                    <th>S.No</th>\r\n                    <th>PRODUCT NAME</th>\r\n                    <th>QUANTITY</th>\r\n                    <th>PRICE</th>\r\n                    <th>PAYMENT MODE</th>\r\n                    <th>ORDER DATE</th>\r\n                    <th>DELIVERY DATE</th>\r\n                    <th>CUSTOMER NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>CONTACT</th>\r\n                    <th>ADDRESS</th>\r\n                    <th>ACTION</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.state.product.map(pro=>\r\n                        <tr>\r\n                        <th>{this.state.no++}</th>\r\n                        <td>{pro.pname}</td>\r\n                        <td>{pro.quantity}</td>\r\n                        <td>{pro.price}</td>\r\n                        <td>{pro.paymode}</td>\r\n                        <td>{pro.odate}</td>\r\n                        <td>{pro.ddate}</td>\r\n                        <td>{pro.cname}</td>\r\n                        <td>{pro.email}</td>\r\n                        <td>{pro.contact}</td>\r\n                        <td>{pro.address}</td>\r\n                        <td><button class=\"btn btn-danger\" onClick={()=>this.deletepro(pro.id)}>Delete</button>\r\n                        <button class=\"btn btn-primary\" onClick={()=>this.updatepro(pro.id)}>Update</button></td>\r\n                    </tr>\r\n                        )}\r\n                </tbody>\r\n                </table>\r\n                <Link to=\"/order\"><button class=\"btn btn-success\">Order more</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Displayproduct","import React,{Component} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass Home extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <h1 style={{ color:\"blue\",fontFamily:\"cursive\",fontWeight:\"bold\"}}>WELCOME TO FLIPKART</h1>\r\n                <hr/>\r\n                <Link to=\"/order\"><button class=\"btn btn-outline-success\">Order Product</button></Link> &nbsp;&nbsp;\r\n                <Link to=\"/display\"><button class=\"btn btn-outline-success\">Display Order List</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","import React,{Component} from \"react\"\r\n// import { createElement } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ProductService from \"../Services/ProductService\";\r\n// import EmployeeService from \"../services/EmployeeService\"\r\n// import validator from \"validator\"\r\nimport './textstyle.css'\r\nclass Orderproduct extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        var today = new Date(),\r\n            //date = today.getFullYear() + '-' + (today.getMonth()+1) + '-' + (today.getDate());\r\n            date = (today.getDate()+ '-' + (today.getMonth()+1) + '-' +today.getFullYear() );\r\n        var ddate = new Date(),\r\n            date1 = (ddate.getDate()+7) + '-' + (ddate.getMonth()+1) + '-' +today.getFullYear();\r\n        this.state={\r\n            pname:\"\",\r\n            quantity:null,\r\n            price:null,\r\n            paymode:\"\",\r\n            odate:\"\",\r\n            ddate:\"\",\r\n            cname:\"\",\r\n            email:\"\",\r\n            contact:\"\",\r\n            address:\"\",\r\n            date: date,\r\n            date1:date1\r\n        }\r\n        this.changedata = this.changedata.bind(this)\r\n        this.changedata1 = this.changedata1.bind(this)\r\n        this.validateData = this.validateData.bind(this)\r\n    }\r\n    changedata(event)\r\n    {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    changedata1(event)\r\n    {\r\n        this.setState({\r\n            quantity:event.target.value,\r\n           \r\n        })\r\n    }\r\n\r\n    validateData(event)\r\n    {\r\n    event.preventDefault();\r\n        let product = {\r\n            pname:this.state.pname,\r\n            quantity:Number(this.state.quantity),\r\n            price:(this.state.quantity*500),\r\n            paymode:this.state.paymode,\r\n            odate:this.state.date,\r\n            ddate:this.state.date1,\r\n            cname:this.state.cname,\r\n            email:this.state.email,\r\n            contact:this.state.contact,\r\n            address:this.state.address\r\n        }\r\n        // console.log(employee)\r\n        \r\n        ProductService.orderproduct(product).then(result=>{\r\n            window.alert(\"Your Order is Placed Sucessfully\")\r\n            this.props.history.push(\"/display\")\r\n            })\r\n    }\r\n    render()\r\n    {\r\n        return( \r\n            <body style={{ backgroundColor:\"lightskyblue\"}}>\r\n            <div align=\"center\">\r\n               \r\n                <h1 style={{ color:\"blue\",fontFamily:\"cursive\",fontWeight:\"bold\"}}>PLACE YOUR ORDER</h1>\r\n                <hr/>\r\n                <marquee><b>1.Discount on product&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.Big Billion Sales is Live&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.Special Offer&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.Place order</b></marquee>\r\n                <form style={{backgroundColor:\"lightblue\"}} onSubmit={this.validateData}>\r\n                    <table>\r\n                        <tr>\r\n                            <td>Product Name</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"pname\" pattern=\"[a-zA-Z\\s]+\" title=\"Invalid Product name\" onChange={this.changedata} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Product Quantity</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"quantity\" pattern=\"[0-9]+\" title=\"Invalid Quantity\" onChange={this.changedata} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Price</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"price\" pattern=\"[0-9.]+\" title=\"Invalid Price\" onChange={this.changedata1} value={this.state.quantity*500} required disabled/></td><div><small>* 500 per Item</small></div>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Payment Mode</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                                <input type=\"radio\" id=\"payChoice1\" name=\"paymode\" onChange={this.changedata} value=\"card\" required/>\r\n                                <label for=\"payChoice1\">card</label>&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"radio\" id=\"payChoice2\" name=\"paymode\" onChange={this.changedata} value=\"cash\"/>\r\n                                <label for=\"payChoice2\">Cash</label>\r\n                        \r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                            <td>Oder Date</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                            <div className='date'>\r\n                            {this.state.date}\r\n                            </div>   \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>delivery date</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                            <div className='date'>\r\n                            {this.state.date1}\r\n                            </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Customer Name</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"cname\" onChange={this.changedata} pattern=\"[A-Za-z\\s]+\" title=\"Invalid Customer name\"  required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email ID</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"  title=\"Invalid email\" onChange={this.changedata} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Contact</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"contact\" pattern=\"^[789][0-9]{9}\" title=\"Invalid Contact Number\" onChange={this.changedata} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Address</td>\r\n                            <td>:</td>\r\n                            <td><textarea name=\"address\" rows=\"4\" cols=\"23\" pattern=\"[A-Za-z\\s]+\" title=\"Invalid Address\" onChange={this.changedata} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>   \r\n                            <td>\r\n                            <button class=\"btn btn-success\">Order</button>\r\n                            &nbsp;&nbsp;\r\n                            <Link to=\"/back\"><button class=\"btn btn-success\">Back</button></Link>\r\n                       \r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </form>\r\n                \r\n            </div>\r\n            </body>\r\n        \r\n        )\r\n    }\r\n}\r\nexport default Orderproduct","import React,{Component} from \"react\"\r\n// import { createElement } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ProductService from \"../Services/ProductService\";\r\n// import EmployeeService from \"../services/EmployeeService\"\r\n// import validator from \"validator\"\r\n\r\nclass Updateproduct extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        var today = new Date(),\r\n            date = (today.getDate() + '-' + (today.getMonth()+1) + '-' + today.getFullYear());\r\n\r\n        var ddate = new Date(),\r\n            date1 = ((ddate.getDate()+7) + '-' + (ddate.getMonth()+1) + '-' +  ddate.getFullYear() );\r\n        this.state={\r\n            pname:\"\",\r\n            quantity:null,\r\n            price:null,\r\n            paymode:\"\",\r\n            odate:\"\",\r\n            ddate:\"\",\r\n            cname:\"\",\r\n            email:\"\",\r\n            contact:\"\",\r\n            address:\"\",\r\n            date: date,\r\n            date1:date1,\r\n            id:this.props.match.params.id,\r\n        }\r\n        this.changedata = this.changedata.bind(this)\r\n        this.changedata1 = this.changedata1.bind(this)\r\n        this.validateData = this.validateData.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        ProductService.findById(this.state.id).then(result=>{\r\n            this.setState({\r\n                pname:result.data.pname,\r\n                quantity:result.data.quantity,\r\n                price:result.data.price,\r\n                paymode:result.data.paymode,\r\n                odate:result.data.date,\r\n                ddate:result.data.date1,\r\n                cname:result.data.cname,\r\n                email:result.data.email,\r\n                contact:result.data.contact,\r\n                address:result.data.address\r\n            })\r\n        })\r\n    }\r\n    changedata(event)\r\n    {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    changedata1(event)\r\n    {\r\n        this.setState({\r\n            quantity:event.target.value,\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    validateData(event)\r\n    {\r\n       \r\n        \r\n    event.preventDefault();\r\n    if(this.state.date>this.state.date1){\r\n        window.alert(\"Please give future date\")\r\n        this.props.history.push(\"/update/\"+this.id)\r\n\r\n    }\r\n    else{\r\n        let product = {\r\n            pname:this.state.pname,\r\n            quantity:this.state.quantity,\r\n            price:(this.state.quantity*500),\r\n            paymode:this.state.paymode,\r\n            odate:this.state.date,\r\n            ddate:this.state.date1,\r\n            cname:this.state.cname,\r\n            email:this.state.email,\r\n            contact:this.state.contact,\r\n            address:this.state.address,\r\n            id:Number(this.state.id)\r\n        }\r\n        // console.log(employee)\r\n        ProductService.updateproduct(product).then(result=>{\r\n            window.alert(\"product is Updated Sucessfully\")\r\n            this.props.history.push(\"/display\")\r\n            })\r\n    }\r\n}\r\n    render()\r\n    {\r\n        return( \r\n            <div align=\"center\">\r\n             \r\n                    \r\n                <h1>Update Page</h1>\r\n                <hr/>\r\n                <form style={{backgroundColor:\"lightblue\"}} onSubmit={this.validateData}>\r\n                    <table>\r\n                    <tr>\r\n                            <td>Product ID</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"id\"  onChange={this.changedata} value={this.state.id} disabled/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Product Name</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"pname\" pattern=\"[a-zA-Z\\s]+\" title=\"Invalid Product name\" onChange={this.changedata} value={this.state.pname} /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Product Quantity</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"quantity\" pattern=\"[0-9]+\" title=\"Invalid Quantity\" onChange={this.changedata} value={this.state.quantity}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Price</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"price\" pattern=\"[0-9.]+\" title=\"Invalid Price\"  onChange={this.changedata1} value={this.state.quantity*500}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Payment Mode</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                                <input type=\"radio\" id=\"payChoice1\" name=\"paymode\" onChange={this.changedata} value=\"card\" required/>\r\n                                <label for=\"payChoice1\">card</label>&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"radio\" id=\"payChoice2\" name=\"paymode\" on onChange={this.changedata} value=\"cash\"/>\r\n                                <label for=\"payChoice2\">Cash</label>\r\n                        \r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                            <td>Oder Date</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                            <div className='date'>\r\n                            {this.state.date}\r\n                            </div>   \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>delivery date</td>\r\n                            <td>:</td>\r\n                            <td>\r\n                            <div className='date'>\r\n                                <input type=\"text\" name=\"date1\" id=\"date1\" pattern=\"\\d{1,2}[0-31]-\\d{1,2}[0-12]-\\d{4}\" title=\" Date Not in format\" placeholder=\"dd-mm-yyyy\" onChange={this.changedata} value={this.state.date1} required/>\r\n                            \r\n                            </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Customer Name</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"cname\" pattern=\"[A-Za-z\\s]+\" title=\"Invalid Customer name\" onChange={this.changedata} value={this.state.cname}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email ID</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"Invalid Email\" onChange={this.changedata} value={this.state.email}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Contact</td>\r\n                            <td>:</td>\r\n                            <td><input type=\"text\" name=\"contact\" pattern=\"^[789][0-9]{9}\" title=\"Invalid Contact Number\" onChange={this.changedata} value={this.state.contact}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Address</td>\r\n                            <td>:</td>\r\n                            <td><textarea name=\"address\" rows=\"4\" cols=\"23\"  pattern=\"[A-Za-z\\s]+\" title=\"Invalid Address\" onChange={this.changedata} value={this.state.address}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>   \r\n                            <td>\r\n                            <button class=\"btn btn-success\">Update</button>\r\n                            &nbsp;&nbsp;\r\n                            <Link to=\"/back\"><button class=\"btn btn-success\">Back</button></Link>\r\n                       \r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Updateproduct","import { BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport './App.css';\nimport Displayproduct from './Components/Displayproduct';\nimport Home from './Components/Home';\nimport Orderproduct from './Components/Orderproduct';\nimport Updateproduct from './Components/Updateproduct';\n\nfunction App() {\n  return (\n    <div styles={{ backgroundColor:\"blue\"}}>\n    <Router>\n    <div className=\"App\">\n      <Switch>\n       <Route path=\"/\" exact component={Home}/>\n       <Route path=\"/back\"  component={Home}/>\n       <Route path=\"/order\"  component={Orderproduct}/>\n       <Route path=\"/display\"  component={Displayproduct}/>\n       <Route path=\"/update/:id\"  component={Updateproduct}/>\n     </Switch>\n    </div>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}